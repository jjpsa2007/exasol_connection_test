export declare enum LogLevel {
    Off = 0,
    Error = 1,
    Warn = 2,
    Info = 3,
    Debug = 4,
    Trace = 5
}
export type LoggerMethod = (...data: any) => void;
export interface ILogger {
    error: LoggerMethod;
    warn: LoggerMethod;
    info: LoggerMethod;
    log: LoggerMethod;
    debug: LoggerMethod;
    trace: LoggerMethod;
}
export declare class Logger implements ILogger {
    private readonly level;
    constructor(level?: number);
    private readonly emptyLog;
    get error(): LoggerMethod;
    get warn(): LoggerMethod;
    get log(): LoggerMethod;
    get info(): (...data: any) => void;
    get version(): (...data: any) => void;
    get debug(): (...data: any) => void;
    get trace(): LoggerMethod;
    private _log;
}
